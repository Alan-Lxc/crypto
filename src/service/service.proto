syntax = "proto3";
option go_package = "../service";
package service;

service NodeService{
    rpc Phase1Getstart(RequestMsg)  returns (ResponseMsg) {}
    rpc Phase1SendPointMsg (PointMsg)    returns (ResponseMsg){}
    rpc Phase2Share(ZeroMsg)    returns(ResponseMsg){}
    rpc Phase2Verify(CommitMsg) returns(ResponseMsg){}

}
service BulletinBoardService {
    // Start a epoch
    rpc StartEpoch(RequestMsg) returns (ResponseMsg) {}
    // BulletinBoard RPC for recontruction phase
    rpc ReadPhase1(RequestMsg) returns (stream Cmt1Msg) {}
    // BulletinBoard RPC for proactivization phase
    rpc WritePhase2(CommitMsg) returns (ResponseMsg) {}
    rpc ReadPhase2(RequestMsg) returns (stream CommitMsg) {}
    // BulletinBoard RPC for share distribution phase
    rpc WritePhase3(Cmt1Msg) returns (ResponseMsg) {}
    rpc ReadPhase3(RequestMsg) returns (stream Cmt1Msg) {}
}

message RequestMsg{}

message ResponseMsg{}

message PointMsg{
    int32 index  = 1;
    bytes x = 2;
    bytes y = 3;
    bytes witness = 4;
}

message ZeroMsg{
    int32 index = 1 ;
    bytes share = 2 ;
}
message CommitMsg{
    int32 Index = 1;
    bytes ShareCommit = 2;
    bytes PolyCommit = 3;
    bytes ZeroWitness = 4;
}
message Cmt1Msg {
    int32 index = 1;
    bytes polycmt = 2;
}